public static long largestRectangle(List<Integer> h) 
    {
        Stack<Integer> right = new Stack<>();
   Stack<Integer> left = new Stack<>();
 
   int length=0;
   int r1=0;
   int l1=0;
   for(int i=0;i< h.size();i++)
   {
       for(int j=i+1;j<h.size();j++)
       {
           if( h.get(j)<h.get(i))
           {
               right.push(j);
               r1=1;
               break;
           }
           
       }
       if( r1==0)
       {
          right.push(h.size()); 
       }
       
       for(int k=i-1;k>=0;k--)
       {
           if(h.get(k)<h.get(i))
           {
               left.push(k);
               l1=1;
               break;
           }
       }
        if( l1==0)
       {
          left.push(-1); 
       }
       r1=0;
       l1=0;
      }
   
   int maxarea=0;
   for(int i= h.size()-1; i>=0;i--)
      {
          
          
          length= right.peek() - left.peek() -1;
          if( maxarea< length* h.get(i))
          {
              maxarea= length* h.get(i);
          }
          left.pop();
          right.pop(); 
   }
   return maxarea;
}
